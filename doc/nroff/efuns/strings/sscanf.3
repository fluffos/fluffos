.\"parse a string using a given format
.TH sscanf 3 "5 Sep 1994" MudOS "LPC Library Functions"

.SH NAME
sscanf() - match substrings in a string.

.SH SYNOPSIS
.nf
int sscanf( string str, string fmt,
            mixed var1, mixed var2 ... );

.SH DESCRIPTION
Parse a string `str' using the format `fmt'. `fmt' can contain strings
separated by "%d" and "%s". Every "%d" and "%s" corresponds to one
of `var1', `var2'...  "%d" will give a number, and "%s" will give a string.
The * may be used in a format specifier (e.g. %*d and %*s) to allow integers
or strings (respectively) to be skipped over in the input string (without
being assigned to a variable).  The LPC sscanf() is similar to its C
counterpart however it does behave somewhat differently.  It is not necessary
(or possible) to pass the address of variables into sscanf (simply pass
the name of the variable).  Another difference is that in the LPC sscanf(),
sscanf(str, "%s %s", str1, str2) will parse the first word in str into
str1 and the remainder of str into str2.
.PP
The number of matched "%d" and "%s" is returned.

.SH SEE ALSO
explode(3), replace_string(3), strsrch(3)
